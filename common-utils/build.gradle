apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'

version "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion version_sdk_target
    buildToolsVersion version_buildTools

    defaultPublishConfig "debug"

    defaultConfig {
        minSdkVersion version_sdk_min
        targetSdkVersion version_sdk_target
        group  'com.magorasystems.android'
        versionCode gitVersion()
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license'
    }
    lintOptions {
        abortOnError false
        enable 'BackButton'
        enable 'GradleDynamicVersion'
        enable 'NewerVersionAvailable'

        disable 'MissingTranslation'
        disable 'InvalidPackage'
        disable 'ExtraTranslation'
    }
    dexOptions {
        incremental true
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    retrolambda {
        javaVersion JavaVersion.VERSION_1_7
        defaultMethods false
        jvmArgs '-noverify'
        incremental false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile(
            "com.android.support:support-annotations:$version_support_annotations"
    )
    compile(
            "io.reactivex:rxandroid:$version_rx_android",
            "io.reactivex:rxjava:$version_rx_java"
    )

    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:$version_retrolambda"

    //Logger
    compile(
            "com.github.tony19:logback-android-classic:$version_logback",
            "com.github.tony19:logback-android-core:$version_logback",
            "org.slf4j:slf4j-api:$version_slf4j_api"
    )

    //RxPreferences
    compile "me.henrytao:rx-shared-preferences:$version_rx_preferences"

    // http://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "$version_lang3"

    //Guava
    compile "com.google.guava:guava:$version_guava"

    testCompile("junit:junit:$version_junit",
            "org.hamcrest:hamcrest-core:$version_hamcrest",
            "org.hamcrest:hamcrest-library:$version_hamcrest",
            "org.mockito:mockito-core:$version_mockito")
}
