apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.bmuschko.nexus'

version "0.0.2"

android {
    compileSdkVersion version_sdk_target
    buildToolsVersion version_buildTools

    defaultPublishConfig "debug"

    defaultConfig {
        minSdkVersion version_sdk_min
        targetSdkVersion version_sdk_target
        group "com.magorasystems.android"
        versionCode gitVersion()
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license'
    }
    lintOptions {
        abortOnError false
        enable 'BackButton'
        enable 'GradleDynamicVersion'
        enable 'NewerVersionAvailable'

        disable 'MissingTranslation'
        disable 'InvalidPackage'
        disable 'ExtraTranslation'
    }

    dexOptions {
        incremental true
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    retrolambda {
        javaVersion JavaVersion.VERSION_1_7
        jdk System.getenv("JAVA8_HOME")
        oldJdk System.getenv("JAVA7_HOME")
        defaultMethods false
        jvmArgs '-noverify'
        incremental true
    }
}

modifyPom {
    project {
        name 'Rx Image Picker'
        description 'Rx Image Picker'
        url 'https://bitbucket.org/magora_karpenko/maf-modules'
        inceptionYear '2016'

        scm{
            url 'https://bitbucket.org/magora_karpenko/maf-modules'
            connection 'scm:https://bitbucket.org/magora_karpenko/maf-modules'
            developerConnection 'scm:https://bitbucket.org/magora_karpenko/maf-modules'

        }

        developers{
            developer {
                id 'karpenko'
                name 'Valentin S.Karpenko'
                email 'karpenko@magora.systems'
            }
        }

        organization {
            name "Magora Systems"
            url "http://magora-systems.com/"
        }
    }
}

extraArchive {
    sources = true
    tests = false
    javadoc = true
}

nexus {
    sign = false
    repositoryUrl = 'http://nexus.java.magora.team/content/repositories/releases/'
    snapshotRepositoryUrl = 'http://nexus.java.magora.team/content/repositories/snapshots/'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':rx-permission')
    compile(
            "com.android.support:support-annotations:$version_support_annotations",
            "com.android.support:appcompat-v7:$version_appcompat",
    )
    compile(
            "io.reactivex:rxjava:$version_rx_java",
            "io.reactivex:rxandroid:$version_rx_android",
    )

    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:$version_retrolambda"

    testCompile "junit:junit:$version_junit"

}
