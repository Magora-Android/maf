apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

version "0.0.1"

android {
    compileSdkVersion version_sdk_target
    buildToolsVersion version_buildTools

    defaultPublishConfig "debug"

    defaultConfig {
        minSdkVersion version_sdk_min
        targetSdkVersion version_sdk_target
        group 'com.magorasystems.android'
        versionCode gitVersion()
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        incremental true
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    retrolambda {
        javaVersion JavaVersion.VERSION_1_7
        jdk System.getenv("JAVA8_HOME")
        oldJdk System.getenv("JAVA7_HOME")
        defaultMethods false
        jvmArgs '-noverify'
        incremental true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':rx-activityresult')
    compile(
            "com.android.support:support-annotations:$version_support_annotations",
            "com.android.support:appcompat-v7:$version_appcompat",
            "com.android.support:cardview-v7:$version_appcompat"
    )
    compile(
            "io.reactivex:rxjava:$version_rx_java"
    )

    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:$version_retrolambda"

    testCompile "junit:junit:$version_junit"

}
